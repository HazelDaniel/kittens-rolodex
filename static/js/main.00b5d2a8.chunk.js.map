{"version":3,"sources":["components/cards_list/card/card.component.jsx","components/cards_list/card_list.component.jsx","components/search_box/search_box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","kitten","id","alt","name","email","CardList","kittens","length","map","SearchBox","type","placeholder","onChange","handler","App","handleInputChange","e","setState","searchValue","target","value","state","fetch","then","res","json","users","this","filteredKittens","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"6UAIaA,EAAO,SAAAC,GAEnB,OACC,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAG,+BAA0BF,EAAMG,OAAOC,GAAvC,0BAAmEC,IAAI,WAC/E,6BAAKL,EAAMG,OAAOG,OAClB,4BAAIN,EAAMG,OAAOI,UAGnB,ECXYC,EAAW,SAAAR,GACvB,OACC,qBAAKC,UAAU,YAAf,UACGD,EAAMS,QAAQC,OAAS,EAAI,iDAA2BV,EAAMS,QAAQE,KAAI,SAACR,GAAD,OAAY,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,GAA9B,KAG5E,ECNYQ,G,MAAY,SAAAZ,GACxB,OAAO,uBAAOC,UAAU,aAAaY,KAAK,SAASC,YAAad,EAAMc,YAAaC,SAAUf,EAAMgB,SACnG,GCiCcC,E,kDAhCd,aAAe,IAAD,8BACb,gBAaAC,kBAAmB,SAACC,GACpB,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,OACtC,EAdA,EAAKC,MAAQ,CACZf,QAAS,GACTY,YAAa,IAJD,CAMb,C,qDACD,WAAqB,IAAD,OACnBI,MAAM,8CACJC,MAAK,SAACC,GAAD,OAASA,EAAIC,MAAb,IACLF,MAAK,SAACG,GACN,EAAKT,SAAS,CAAEX,QAASoB,GACzB,GACF,G,oBAID,WACC,MAAiCC,KAAKN,MAA9Bf,EAAR,EAAQA,QAASY,EAAjB,EAAiBA,YACXU,EAAkBtB,EAAQuB,QAAO,SAAC7B,GACvC,OAAOA,EAAOG,KAAK2B,cAAcC,SAASb,EAAYY,cACtD,IACD,OACI,sBAAKhC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWa,YAAY,yBAAyBE,QAASc,KAAKZ,oBAClE,cAAC,EAAD,CAAUT,QAASsB,MAGrB,K,GA9BgBI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EACT,GAEJ,ECJYO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,OAOJb,G","file":"static/js/main.00b5d2a8.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.styles.css\";\n// const robotUrl = \"https://robohash.org/1?set=set2\";\n\nexport const Card = props => {\n\t// console.log(props.kitten)\n\treturn (\n\t\t<div className=\"card-container\">\n\t\t\t<img src={`https://robohash.org/${props.kitten.id}?set=set4&size=180x180`} alt=\"kitten\" />\n\t\t\t<h2>{props.kitten.name}</h2>\n\t\t\t<p>{props.kitten.email}</p>\n\t\t</div>\n\t);\n}","import \"./card_list.styles.css\";\nimport { Card } from \"./card/card.component\";\nexport const CardList = props => {\n\treturn (\n\t\t<div className=\"card-list\">\n\t\t\t{!props.kittens.length > 0 ? <h1>No cards found!</h1> : props.kittens.map((kitten) => <Card key={kitten.id} kitten={kitten}></Card>)}\n\t\t</div>\n\t);\n}","import React from \"react\";\nimport \"./search_box.styles.css\";\nexport const SearchBox = props => {\n\treturn <input className=\"search-box\" type=\"search\" placeholder={props.placeholder} onChange={props.handler} />;\n}","import { React, Component } from \"react\";\nimport \"./App.css\";\nimport { CardList } from \"./components/cards_list/card_list.component\";\nimport { SearchBox } from \"./components/search_box/search_box.component\";\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tkittens: [],\n\t\t\tsearchValue: \"\",\n    };\n\t}\n\tcomponentDidMount() {\n\t\tfetch(\"https://jsonplaceholder.typicode.com/users\")\n\t\t\t.then((res) => res.json())\n\t\t\t.then((users) => {\n\t\t\t\tthis.setState({ kittens: users });\n\t\t\t});\n\t}\n  handleInputChange =(e)=> {\n\t\tthis.setState({ searchValue: e.target.value });\n\t};\n\trender() {\n\t\tconst { kittens, searchValue } = this.state;\n\t\tconst filteredKittens = kittens.filter((kitten) => {\n\t\t\treturn kitten.name.toLowerCase().includes(searchValue.toLowerCase());\n\t\t});\n\t\treturn (\n      <div className=\"App\">\n        <h1>Kittens Rolodex</h1>\n        <SearchBox placeholder=\"search favorite kitten\" handler={this.handleInputChange}></SearchBox>\n\t\t\t\t<CardList kittens={filteredKittens}></CardList>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}